extend type Query {
    "Get a collection of systems."
    systems(
        "Pagination options."
        pagination: Pagination

        "Input for filtering the query."
        query: SystemsQuery

        "Input for sorting the collection. If omitted the collection will be sorted by the name of the system in ascending order."
        sort: SystemsSort
    ): Systems! @auth
}

"System type."
type System {
    "Unique ID of the system."
    id: UUID!

    "Name of the system."
    name: String!
}

"System collection."
type Systems {
    "Object related to pagination of the collection."
    pageInfo: PageInfo!

    "The list of system objects in the collection."
    nodes: [System!]!
}

"Input for filtering a collection of systems."
input SystemsQuery {
    "Filter by system name."
    name: String
}

"Input for sorting a collection of systems."
input SystemsSort {
    "Field to sort by."
    field: SystemSortField!

    "Sort direction."
    direction: SortDirection!
}

"Fields to sort the collection by."
enum SystemSortField {
    "Sort by name."
    NAME
}