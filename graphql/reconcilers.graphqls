extend type Mutation {
    """
    Enable a reconciler

    A reconciler must be fully configured before it can be enabled.
    """
    enableReconciler(
        "The name of the reconciler to enable."
        name: ReconcilerName!
    ): Reconciler! @admin

    """
    Disable a reconciler

    The reconciler configuration will be left intact.
    """
    disableReconciler(
        "The name of the reconciler to disable."
        name: ReconcilerName!
    ): Reconciler! @admin

    "Configure a reconciler."
    configureReconciler(
        "The name of the reconciler to configure."
        name: ReconcilerName!

        "List of reconciler config inputs."
        config: [ReconcilerConfigInput!]!
    ): Reconciler! @admin

    "Reset all reconciler configuration options to their initial state and disable the reconciler if it is currently enabled."
    resetReconciler(
        "The name of the reconciler to reset."
        name: ReconcilerName!
    ): Reconciler! @admin

    "Add opt-out of a reconciler for a team member."
    addReconcilerOptOut(
        "The team slug."
        teamSlug: Slug!

        "The user ID of the team member."
        userId: UUID!

        "The name of the reconciler to opt the team member out of."
        reconciler: ReconcilerName!
    ): TeamMember!

    "Remove opt-out of a reconciler for a team member."
    removeReconcilerOptOut(
        "The team slug."
        teamSlug: Slug!

        "The user ID of the team member."
        userId: UUID!

        "The name of the reconciler to clear the opt-out from."
        reconciler: ReconcilerName!
    ): TeamMember!
}

extend type Query {
    "Get a collection of reconcilers."
    reconcilers: [Reconciler!]! @admin

    "Get the names of all enabled reconcilers."
    enabledReconcilerNames: [ReconcilerName!]! @auth
}

"Reconciler type."
type Reconciler {
    "The name of the reconciler."
    name: ReconcilerName!

    "The human-friendly name of the reconciler."
    displayName: String!

    "Description of what the reconciler is responsible for."
    description: String!

    "Whether or not the reconciler is available for teams in Console."
    enabled: Boolean!

    "Reconciler configuration keys and descriptions."
    config: [ReconcilerConfig!]!

    "Whether or not the reconciler is fully configured and ready to be enabled."
    configured: Boolean!

    "The run order of the reconciler."
    runOrder: Int!

    "Audit logs for this reconciler."
    auditLogs: [AuditLog!]!
}

"Reconciler configuration type."
type ReconcilerConfig {
    "Configuration key."
    key: ReconcilerConfigKey!

    "The human-friendly name of the configuration key."
    displayName: String!

    "Configuration description."
    description: String!

    "Whether or not the configuration key has a value."
    configured: Boolean!

    "Whether or not the configuration value is considered a secret. Secret values will not be exposed through the API."
    secret: Boolean!

    "Configuration value. This will be set to null if the value is considered a secret."
    value: String
}

"Reconciler configuration input."
input ReconcilerConfigInput {
    "Configuration key."
    key: ReconcilerConfigKey!

    "Configuration value."
    value: String!
}