extend type Query {
    "Get a collection of users, sorted by name."
    users: [User!]! @auth

    "Get a specific user."
    user(
        "ID of the user."
        id: UUID!
    ): User! @auth

    "The currently authenticated user."
    me: User! @auth
}

"User type."
type User {
    "Unique ID of the user."
    id: UUID!

    "The email address of the user."
    email: String!

    "The name of the user."
    name: String!

    "List of teams the user is a member of."
    teams: [UserTeam!]!

    "Roles attached to the user."
    roles: [Role!]!
}

"User team."
type UserTeam {
    "Team instance."
    team: Team!

    "The role that the user has in the team."
    role: TeamRole!
}