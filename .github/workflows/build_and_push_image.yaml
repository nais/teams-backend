name: Build, push, and rollout
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
env:
  GOOGLE_REGISTRY: "europe-north1-docker.pkg.dev"
  FEATURE_NAME: "teams-backend"
  RUNNER_IMG: "gcr.io/distroless/static-debian11:nonroot"
  BASEIMG_IDENTITY: "keyless@distroless.iam.gserviceaccount.com"
  BASEIMG_ISSUER: "https://accounts.google.com"
jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3 # ratchet:exclude
      - name: Get go version
        id: go_version
        run: |
          echo "GO_VERSION=$(grep golang .tool-versions | awk '{print $2}')" >> $GITHUB_OUTPUT
      - uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # ratchet:azure/setup-helm@v3
        with:
          version: "v3.11.1"
      - uses: sigstore/cosign-installer@37f387123cf7d4270454d0c351cf673ef28a8662 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.2.1'
      - name: Verify runner image
        run: cosign verify --certificate-identity ${{ env.BASEIMG_IDENTITY }} --certificate-oidc-issuer ${{ env.BASEIMG_ISSUER }} ${{ env.RUNNER_IMG }}
      - uses: nais/platform-build-push-sign@main # ratchet:exclude
        id: build_push_sign
        with:
          name: ${{ env.FEATURE_NAME }}
          build_args: |
            GO_VERSION=${{ steps.go_version.outputs.GO_VERSION }}
          google_service_account: gh-${{ env.FEATURE_NAME }}
          push: ${{ github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' }}
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
      - name: Package chart
        id: package_chart
        env:
          CHART_PATH: ./charts/${{ env.FEATURE_NAME }}
        run: |
          base_version="$(yq '.version' < "${{ env.CHART_PATH }}/Chart.yaml")"
          chart_version="${base_version}-${{ steps.build_push_sign.outputs.version }}"

          yq eval \
            '.version="'"$chart_version"'"' \
            "${{ env.CHART_PATH }}/Chart.yaml" --inplace
          yq eval \
            '.image.tag="${{ steps.build_push_sign.outputs.version }}"' \
            "${{ env.CHART_PATH }}/values.yaml" --inplace

          # helm dependency update "${{ env.CHART_PATH }}"
          helm package "${{ env.CHART_PATH }}" --destination .

          name=$(yq '.name' < "${{ env.CHART_PATH }}/Chart.yaml")
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "version=$chart_version" >> $GITHUB_OUTPUT
          echo "archive=$name-$chart_version.tgz" >> $GITHUB_OUTPUT
      - id: "auth"
        if: github.ref == 'refs/heads/main'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1 # ratchet:exclude
        with:
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: "gh-${{ env.FEATURE_NAME }}@nais-io.iam.gserviceaccount.com"
          token_format: access_token
      - name: Log in to Google Artifact Registry
        if: github.ref == 'refs/heads/main'
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://${{ env.GOOGLE_REGISTRY }}
      - name: Push Chart
        if: github.ref == 'refs/heads/main'
        run: |-
          chart="${{ steps.package_chart.outputs.archive }}"
          echo "Pushing: $chart"
          helm push "$chart" oci://${{ env.GOOGLE_REGISTRY }}/nais-io/nais/feature
    outputs:
      chart_name: ${{ steps.package_chart.outputs.name }}
      chart_version: ${{ steps.package_chart.outputs.version }}
      chart_archive: ${{ steps.package_chart.outputs.archive }}
  rollout:
    runs-on: fasit-deploy
    permissions:
      id-token: write
    needs:
      - build_and_push
    steps:
      - uses: nais/fasit-deploy@v2 # ratchet:exclude
        if: github.ref == 'refs/heads/main'
        with:
          chart: oci://${{ env.GOOGLE_REGISTRY }}/nais-io/nais/feature/${{ needs.build_and_push.outputs.chart_name }}
          version: ${{ needs.build_and_push.outputs.chart_version }}
