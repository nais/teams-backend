# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graphql/*.graphqls

# Where should the generated server code go?
exec:
  filename: pkg/graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: pkg/graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: pkg/graph
  package: graph
  filename_template: "{name}.go"

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/nais/console/pkg/dbmodels"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  System:
    model:
      - github.com/nais/console/pkg/sqlc.System # manual mapping that can be removed when autobind is pointed to the sqlc models

  RoleBinding:
    model:
      - github.com/nais/console/pkg/dbmodels.UserRole
    fields:
      role:
        resolver: true
  UUID:
    model:
      - github.com/nais/console/pkg/dbmodels.UUID
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Team:
    fields:
      users:
        resolver: true
      metadata:
        resolver: true
      auditLogs:
        resolver: true
  User:
    fields:
      roles:
        resolver: true
      teams:
        resolver: true
  Role:
    fields:
      authorizations:
        resolver: true
  AuditLog:
    fields:
      actor:
        resolver: true
      correlation:
        resolver: true
      targetSystem:
        resolver: true
      targetTeam:
        resolver: true
      targetUser:
        resolver: true