package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/google/uuid"
	"github.com/nais/teams-backend/pkg/db"
	"github.com/nais/teams-backend/pkg/graph/generated"
	"github.com/nais/teams-backend/pkg/graph/model"
	"github.com/nais/teams-backend/pkg/slug"
)

// FindGcpProjectByProjectID is the resolver for the findGcpProjectByProjectID field.
func (r *entityResolver) FindGcpProjectByProjectID(ctx context.Context, projectID string) (*model.GcpProject, error) {
	panic(fmt.Errorf("not implemented: FindGcpProjectByProjectID - findGcpProjectByProjectID"))
}

// FindTeamBySlug is the resolver for the findTeamBySlug field.
func (r *entityResolver) FindTeamBySlug(ctx context.Context, slug slug.Slug) (*db.Team, error) {
	return r.database.GetTeamBySlug(ctx, slug)
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id uuid.UUID) (*db.User, error) {
	panic(fmt.Errorf("not implemented: FindUserByID - findUserByID"))
}

// Entity returns generated.EntityResolver implementation.
func (r *Resolver) Entity() generated.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
