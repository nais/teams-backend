package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/nais/teams-backend/pkg/db"
	"github.com/nais/teams-backend/pkg/graph/generated"
	"github.com/nais/teams-backend/pkg/graph/model"
	"github.com/nais/teams-backend/pkg/sqlc"
)

// TeamsInternal is the resolver for the teamsInternal field.
func (r *queryResolver) TeamsInternal(ctx context.Context) (*model.TeamsInternal, error) {
	return &model.TeamsInternal{}, nil
}

// Name is the resolver for the name field.
func (r *roleResolver) Name(ctx context.Context, obj *db.Role) (sqlc.RoleName, error) {
	return obj.RoleName, nil
}

// Roles is the resolver for the roles field.
func (r *teamsInternalResolver) Roles(ctx context.Context, obj *model.TeamsInternal) ([]sqlc.RoleName, error) {
	return sqlc.AllRoleNameValues(), nil
}

// Role returns generated.RoleResolver implementation.
func (r *Resolver) Role() generated.RoleResolver { return &roleResolver{r} }

// TeamsInternal returns generated.TeamsInternalResolver implementation.
func (r *Resolver) TeamsInternal() generated.TeamsInternalResolver { return &teamsInternalResolver{r} }

type (
	roleResolver          struct{ *Resolver }
	teamsInternalResolver struct{ *Resolver }
)

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *roleResolver) TargetServiceAccountID(ctx context.Context, obj *db.Role) (*string, error) {
	panic(fmt.Errorf("not implemented: TargetServiceAccountID - targetServiceAccountID"))
}
