// Code generated by mockery v2.14.0. DO NOT EDIT.

package proxy

import (
	slug "github.com/nais/console/pkg/slug"
	mock "github.com/stretchr/testify/mock"
)

// MockDeploy is an autogenerated mock type for the Deploy type
type MockDeploy struct {
	mock.Mock
}

// GetApiKey provides a mock function with given fields: _a0
func (_m *MockDeploy) GetApiKey(_a0 slug.Slug) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(slug.Slug) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(slug.Slug) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockDeploy interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDeploy creates a new instance of MockDeploy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDeploy(t mockConstructorTestingTNewMockDeploy) *MockDeploy {
	mock := &MockDeploy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
