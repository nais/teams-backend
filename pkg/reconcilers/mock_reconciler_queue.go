// Code generated by mockery v2.14.0. DO NOT EDIT.

package reconcilers

import mock "github.com/stretchr/testify/mock"

// MockReconcilerQueue is an autogenerated mock type for the ReconcilerQueue type
type MockReconcilerQueue struct {
	mock.Mock
}

// Add provides a mock function with given fields: input
func (_m *MockReconcilerQueue) Add(input Input) error {
	ret := _m.Called(input)

	var r0 error
	if rf, ok := ret.Get(0).(func(Input) error); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *MockReconcilerQueue) Close() {
	_m.Called()
}

type mockConstructorTestingTNewMockReconcilerQueue interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockReconcilerQueue creates a new instance of MockReconcilerQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockReconcilerQueue(t mockConstructorTestingTNewMockReconcilerQueue) *MockReconcilerQueue {
	mock := &MockReconcilerQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
